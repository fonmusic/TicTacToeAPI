// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicTacToeAPI.Data;

#nullable disable

namespace TicTacToeAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230723231230_GameEdit")]
    partial class GameEdit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.8");

            modelBuilder.Entity("TicTacToeAPI.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("TicTacToeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TicTacToeId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("TicTacToeLibrary.TicTacToe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DescriptionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DescriptionId");

                    b.ToTable("TicTacToe");
                });

            modelBuilder.Entity("TicTacToeLibrary.TicTacToeDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Board")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("GameState")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NextPlayer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Winner")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TicTacToeDescription");
                });

            modelBuilder.Entity("TicTacToeAPI.Models.Game", b =>
                {
                    b.HasOne("TicTacToeLibrary.TicTacToe", "TicTacToe")
                        .WithMany()
                        .HasForeignKey("TicTacToeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TicTacToe");
                });

            modelBuilder.Entity("TicTacToeLibrary.TicTacToe", b =>
                {
                    b.HasOne("TicTacToeLibrary.TicTacToeDescription", "Description")
                        .WithMany()
                        .HasForeignKey("DescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Description");
                });
#pragma warning restore 612, 618
        }
    }
}
